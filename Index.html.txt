<!doctype html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width,initial-scale=1">
<title>Play Portal</title>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.13/codemirror.min.css">
<style>
:root{
  --bg:#0f1724; --card:#0b1220; --accent:#ff6b6b; --muted:#9aa4b2;
  --glass: rgba(255,255,255,0.03);
}
*{box-sizing:border-box}
body{margin:0;font-family:Inter,system-ui,Segoe UI,Roboto,"Helvetica Neue",Arial;
     background:linear-gradient(180deg,#071026 0%, #0f1a2a 100%); color:#e6eef6; -webkit-font-smoothing:antialiased;}
header{display:flex;align-items:center;gap:16px;padding:20px 28px;border-bottom:1px solid rgba(255,255,255,0.03)}
header h1{margin:0;font-size:20px;letter-spacing:0.5px}
main{max-width:1100px;margin:28px auto;padding:20px}
.grid{display:grid;grid-template-columns:360px 1fr;gap:20px}
.card{background:var(--card);border-radius:12px;padding:16px;box-shadow:0 6px 18px rgba(2,6,23,0.6)}
.menu{display:flex;flex-direction:column;gap:8px}
.menu button{background:var(--glass);border:1px solid rgba(255,255,255,0.03);color:var(--muted);
             padding:12px;border-radius:10px;text-align:left;cursor:pointer;font-weight:600}
.menu button.active{background:linear-gradient(90deg, rgba(255,107,107,0.12), rgba(255,107,107,0.05));color:var(--accent)}
.info{margin-top:12px;color:var(--muted);font-size:13px}
.play-area{min-height:520px;padding:12px;display:flex;flex-direction:column;gap:12px}
.toolbar{display:flex;gap:12px;align-items:center}
.toolbar .btn{background:var(--accent);color:#0b1220;border:none;padding:8px 12px;border-radius:8px;cursor:pointer}
.toolbar .muted{background:transparent;border:1px solid rgba(255,255,255,0.04);padding:8px 12px;border-radius:8px;color:var(--muted)}
canvas{background:#071232;border-radius:8px;display:block;margin:auto}
.footer{margin-top:8px;color:var(--muted);font-size:13px}
.title{font-size:18px;margin:6px 0 12px}
.score {font-weight:700;color:#fff}
.center {display:flex;align-items:center;justify-content:center;height:100%}
#admin-section{margin-top:60px;display:flex;flex-direction:column;align-items:center;opacity:0;transition:opacity 0.5s}
#admin-section.visible{opacity:1}
#python-ide{margin-top:20px;display:none;flex-direction:column;gap:8px}
.CodeMirror{height:300px; border-radius:8px; background:#0b1220; color:#e6eef6;}
</style>
</head>
<body>
<header>
  <h1>Play Portal</h1>
  <div style="margin-left:auto;color:var(--muted)">Games + Secret Python</div>
</header>
<main>
  <div class="grid">
    <aside class="card">
      <div style="font-weight:800">Your Games</div>
      <div class="menu" style="margin-top:16px">
        <button id="btn-snake" class="active" onclick="selectGame('snake')">ðŸŸ© Snake</button>
        <button id="btn-break" onclick="selectGame('breakout')">ðŸŸ¦ Breakout</button>
        <button id="btn-flap" onclick="selectGame('flappy')">ðŸŸ¨ Flappy</button>
      </div>
      <div class="info">
        <div class="title">How to play</div>
        <ul style="padding-left:18px;margin:0;color:var(--muted);line-height:1.6">
          <li><strong>Snake:</strong> Arrow keys to move.</li>
          <li><strong>Breakout:</strong> Paddle + ball + bricks</li>
          <li><strong>Flappy:</strong> Click / Space to flap</li>
        </ul>
      </div>
    </aside>

    <section class="card play-area">
      <div style="display:flex;justify-content:space-between;align-items:center">
        <div>
          <div id="game-title" style="font-weight:800;font-size:18px">Snake</div>
          <div id="game-sub" style="color:var(--muted);font-size:13px">Classic snake â€” grow by eating apples</div>
        </div>
        <div class="toolbar">
          <div style="color:var(--muted);font-size:13px">Score: <span id="score" class="score">0</span></div>
          <button class="btn" id="btn-start" onclick="startGame()">Start</button>
          <button class="muted" id="btn-reset" onclick="resetGame()">Reset</button>
        </div>
      </div>
      <div id="canvas-wrap" style="display:flex;justify-content:center;align-items:center;min-height:420px"></div>

      <!-- Hidden Admin Section -->
      <div id="admin-section">
        <input type="password" id="admin-pass" placeholder="Admin Password" style="padding:8px;border-radius:6px;border:none;background:#0b1220;color:#fff;text-align:center;width:200px">
        <button class="btn" id="admin-submit" style="margin-top:8px">Unlock</button>
        <div id="admin-msg" style="color:#ff6b6b;margin-top:6px"></div>
      </div>

      <!-- Python IDE Section -->
      <div id="python-ide">
        <div style="font-weight:800;font-size:16px">Python Playground</div>
        <textarea id="python-code"></textarea>
        <button class="btn" id="run-python">Run</button>
        <pre id="python-output" style="background:#071232;color:#fff;padding:10px;border-radius:8px;min-height:100px;"></pre>
      </div>

    </section>
  </div>
</main>

<script src="https://cdn.jsdelivr.net/pyodide/v0.23.2/full/pyodide.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.13/codemirror.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.13/mode/python/python.min.js"></script>
<script>
/* --- Game Portal JS --- */

let currentGame = 'snake';
let canvas, ctx;
let scoreEl = document.getElementById('score');
let titleEl = document.getElementById('game-title');
let subEl = document.getElementById('game-sub');
let wrap = document.getElementById('canvas-wrap');
let loopId = null;

function clearLoop(){ if(loopId) cancelAnimationFrame(loopId); loopId = null; if(canvas){ canvas.remove(); canvas=null; ctx=null;} }
function setScore(v){ scoreEl.textContent = v; }
function setActiveButton(name){
  ['snake','breakout','flappy'].forEach(n=> document.getElementById('btn-'+(n==='breakout'?'break':n)).classList.toggle('active', n===name));
}

function selectGame(name){
  if(currentGame === name) return;
  currentGame = name;
  setActiveButton(name);
  if(name==='snake'){ titleEl.textContent='Snake'; subEl.textContent='Classic snake â€” grow by eating apples'; }
  if(name==='breakout'){ titleEl.textContent='Breakout'; subEl.textContent='Destroy all bricks with paddle & ball'; }
  if(name==='flappy'){ titleEl.textContent='Flappy'; subEl.textContent='Click / Space to flap'; }
  resetGame();
}
function startGame(){ if(currentGame==='snake') startSnake(); if(currentGame==='breakout') startBreakout(); if(currentGame==='flappy') startFlappy(); }
function resetGame(){ clearLoop(); setScore(0); startGame(); }

/* ------------------- Simple Snake ------------------- */
function startSnake(){
  clearLoop();
  canvas = document.createElement('canvas'); canvas.width=600; canvas.height=420;
  ctx = canvas.getContext('2d'); wrap.appendChild(canvas);
  const grid=20, cols=Math.floor(canvas.width/grid), rows=Math.floor(canvas.height/grid);
  let snake=[{x:Math.floor(cols/2),y:Math.floor(rows/2)}], dir={x:1,y:0}, apple=spawnApple(), speed=8, frame=0, score=0; setScore(score);
  function spawnApple(){while(true){let p={x:Math.floor(Math.random()*cols),y:Math.floor(Math.random()*rows)}; if(!snake.some(s=>s.x===p.x&&s.y===p.y)) return p;}}
  function update(){frame++; if(frame%Math.round(60/speed)===0){let head={x:snake[0].x+dir.x,y:snake[0].y+dir.y}; if(head.x<0||head.y<0||head.x>=cols||head.y>=rows||snake.some(s=>s.x===head.x&&s.y===head.y)){alert('Game Over'); return;} snake.unshift(head); if(head.x===apple.x&&head.y===apple.y){score++; setScore(score); apple=spawnApple();}else snake.pop(); draw();} loopId=requestAnimationFrame(update);}
  function draw(){ctx.fillStyle='#071232'; ctx.fillRect(0,0,canvas.width,canvas.height); ctx.fillStyle='#0fdf0f'; snake.forEach(s=>ctx.fillRect(s.x*grid,s.y*grid,grid-1,grid-1)); ctx.fillStyle='#df0f0f'; ctx.fillRect(apple.x*grid,apple.y*grid,grid-1,grid-1);}
  document.onkeydown=e=>{if(e.key==='ArrowUp'&&dir.y===0) dir={x:0,y:-1}; if(e.key==='ArrowDown'&&dir.y===0) dir={x:0,y:1}; if(e.key==='ArrowLeft'&&dir.x===0) dir={x:-1,y:0}; if(e.key==='ArrowRight'&&dir.x===0) dir={x:1,y:0};};
  update();
}

/* ------------------- Simple Breakout ------------------- */
function startBreakout(){
  clearLoop();
  canvas = document.createElement('canvas'); canvas.width=600; canvas.height=420; ctx=canvas.getContext('2d'); wrap.appendChild(canvas);
  let ball={x:300,y:200,r:8,dx:4,dy:-4}, paddle={x:270,y:400,w:60,h:10}, bricks=[], rows=5, cols=10, score=0; setScore(score);
  for(let r=0;r<rows;r++){bricks[r]=[];for(let c=0;c<cols;c++){bricks[r][c]={x:c*60+10,y:r*20+10,status:1};}}
  function draw(){ctx.clearRect(0,0,canvas.width,canvas.height); ctx.fillStyle='#ff6b6b'; ctx.beginPath(); ctx.arc(ball.x,ball.y,ball.r,0,Math.PI*2); ctx.fill(); ctx.fillStyle='#0fdf0f'; ctx.fillRect(paddle.x,paddle.y,paddle.w,paddle.h); for(let r=0;r<rows;r++){for(let c=0;c<cols;c++){if(bricks[r][c].status){let b=bricks[r][c]; ctx.fillStyle='#0fdf0f'; ctx.fillRect(b.x,b.y,50,15);}}}}
  function update(){ball.x+=ball.dx; ball.y+=ball.dy; if(ball.x<0||ball.x>canvas.width) ball.dx*=-1;if(ball.y<0) ball.dy*=-1;if(ball.y>canvas.height){alert('Game Over'); return;} if(ball.y+ball.r>paddle.y && ball.x>paddle.x && ball.x<paddle.x+paddle.w){ball.dy*=-1;}for(let r=0;r<rows;r++){for(let c=0;c<cols;c++){let b=bricks[r][c]; if(b.status && ball.x>b.x && ball.x<b.x+50 && ball.y>b.y && ball.y<b.y+15){ball.dy*=-1;b.status=0; score++; setScore(score);}}} draw(); loopId=requestAnimationFrame(update);}
  document.onmousemove=e=>{let rect=canvas.getBoundingClientRect(); let root=document.documentElement; let mouseX=e.clientX-rect.left; paddle.x=Math.min(canvas.width-paddle.w, Math.max(0, mouseX- paddle.w/2));}
  update();
}

/* ------------------- Simple Flappy ------------------- */
function startFlappy(){
  clearLoop();
  canvas = document.createElement('canvas'); canvas.width=600; canvas.height=420; ctx=canvas.getContext('2d'); wrap.appendChild(canvas);
  let bird={x:80,y:200,dy:0}, gravity=0.6,lift=-10,pipes=[],frame=0,score=0; setScore(score);
  function addPipe(){let top=50+Math.random()*150; pipes.push({x:600,top:top,bottom:top+120});}
  function update(){frame++; ctx.fillStyle='#071232'; ctx.fillRect(0,0,canvas.width,canvas.height); bird.dy+=gravity; bird.y+=bird.dy; ctx.fillStyle='#ffdf00'; ctx.fillRect(bird.x,bird.y,20,20); if(frame%90===0)addPipe(); pipes.forEach((p,i)=>{p.x-=3;ctx.fillStyle='#0fdf0f'; ctx.fillRect(p.x,0,20,p.top); ctx.fillRect(p.x,p.bottom,20,canvas.height-p.bottom); if(bird.x+20>p.x && bird.x<p.x+20 && (bird.y<p.top || bird.y>p.bottom)){alert('Game Over'); return;} if(p.x+20<0)pipes.splice(i,1);}); loopId=requestAnimationFrame(update);}
  document.onkeydown=document.onclick=e=>{bird.dy=lift;} 
  update();
}

/* ------------------- Hidden Admin + Python IDE ------------------- */

let adminSection = document.getElementById('admin-section');
let pythonIDE = document.getElementById('python-ide');
let adminPassInput = document.getElementById('admin-pass');
let adminSubmit = document.getElementById('admin-submit');
let adminMsg = document.getElementById('admin-msg');
let failedAttempts=0;
const ADMIN_PASSWORD = "YourVeryComplicatedPassword123!"; // change this

window.addEventListener('scroll', ()=>{
  let rect = wrap.getBoundingClientRect();
  if(rect.bottom < window.innerHeight + 20){ adminSection.classList.add('visible'); }
});

adminSubmit.addEventListener('click', ()=>{
  if(adminPassInput.value===ADMIN_PASSWORD){
    pythonIDE.style.display='flex';
    adminMsg.textContent='Access granted!';
  }else{
    failedAttempts++;
    adminMsg.textContent='Wrong password ('+failedAttempts+'/5)';
    if(failedAttempts>=5){ alert('Too many wrong attempts!'); failedAttempts=0; }
  }
});

/* ------------------- Python IDE ------------------- */
let pyodideReadyPromise = loadPyodide();
let editor = CodeMirror.fromTextArea(document.getElementById('python-code'),{mode:'python',theme:'default',lineNumbers:true});
document.getElementById('run-python').addEventListener('click', async ()=>{
  let code = editor.getValue();
  localStorage.setItem('python-code', code);
  let pyodide = await pyodideReadyPromise;
  try{
    let result = await pyodide.runPythonAsync(code);
    document.getElementById('python-output').textContent=result===undefined?'':result;
  }catch(err){document.getElementById('python-output').textContent=err;}
});
// Load saved code if any
if(localStorage.getItem('python-code')){ editor.setValue(localStorage.getItem('python-code')); }

</script>
</body>
</html>
